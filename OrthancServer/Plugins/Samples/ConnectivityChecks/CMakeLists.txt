cmake_minimum_required(VERSION 2.8)

project(ConnectivityChecks)

SET(PLUGIN_NAME "connectivity-checks" CACHE STRING "Name of the plugin")
SET(PLUGIN_VERSION "mainline" CACHE STRING "Version of the plugin")

include(${CMAKE_CURRENT_SOURCE_DIR}/../../../../OrthancFramework/Resources/CMake/OrthancFrameworkParameters.cmake)
include(${CMAKE_CURRENT_SOURCE_DIR}/../../../../OrthancFramework/Resources/CMake/OrthancFrameworkConfiguration.cmake)

include(JavaScriptLibraries.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/../Common/OrthancPluginsExports.cmake)

if (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
  execute_process(
    COMMAND 
    ${PYTHON_EXECUTABLE} ${CMAKE_SOURCE_DIR}/../../../../OrthancFramework/Resources/WindowsResources.py
    ${PLUGIN_VERSION} ConnectivityChecks ConnectivityChecks.dll "Orthanc plugin to serve additional folders"
    ERROR_VARIABLE Failure
    OUTPUT_FILE ${AUTOGENERATED_DIR}/ConnectivityChecks.rc
    )

  if (Failure)
    message(FATAL_ERROR "Error while computing the version information: ${Failure}")
  endif()

  list(APPEND ADDITIONAL_RESOURCES ${AUTOGENERATED_DIR}/ConnectivityChecks.rc)
endif()  

EmbedResources(
  --framework-path=${CMAKE_SOURCE_DIR}/../../../../OrthancFramework/Sources
  WEB_RESOURCES  ${CMAKE_CURRENT_SOURCE_DIR}/WebResources
  LIBRARIES      ${JAVASCRIPT_LIBS_DIR}
  )

add_definitions(
  -DHAS_ORTHANC_EXCEPTION=1
  -DORTHANC_PLUGIN_NAME="${PLUGIN_NAME}"
  -DORTHANC_PLUGIN_VERSION="${PLUGIN_VERSION}"
  )

include_directories(
  ${CMAKE_SOURCE_DIR}/../../Include/
  )

add_library(ConnectivityChecks SHARED
  ${ADDITIONAL_RESOURCES}
  ${AUTOGENERATED_SOURCES}
  ${ORTHANC_CORE_SOURCES_DEPENDENCIES}
  ${CMAKE_SOURCE_DIR}/../../../../OrthancFramework/Sources/Enumerations.cpp
  ${CMAKE_SOURCE_DIR}/../../../../OrthancFramework/Sources/Logging.cpp
  ${CMAKE_SOURCE_DIR}/../../../../OrthancFramework/Sources/SystemToolbox.cpp
  ${CMAKE_SOURCE_DIR}/../../../../OrthancFramework/Sources/Toolbox.cpp
  Plugin.cpp
  )

set_target_properties(
  ConnectivityChecks PROPERTIES 
  VERSION ${PLUGIN_VERSION} 
  SOVERSION ${PLUGIN_VERSION}
  )

install(
  TARGETS ConnectivityChecks
  DESTINATION .
  )
