/**
 * Orthanc - A Lightweight, RESTful DICOM Store
 * Copyright (C) 2012-2016 Sebastien Jodogne, Medical Physics
 * Department, University Hospital of Liege, Belgium
 * Copyright (C) 2017-2020 Osimis S.A., Belgium
 *
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * In addition, as a special exception, the copyright holders of this
 * program give permission to link the code of its release with the
 * OpenSSL project's "OpenSSL" library (or with modified versions of it
 * that use the same license as the "OpenSSL" library), and distribute
 * the linked executables. You must obey the GNU General Public License
 * in all respects for all of the code used other than "OpenSSL". If you
 * modify file(s) with this exception, you may extend this exception to
 * your version of the file(s), but you are not obligated to do so. If
 * you do not wish to do so, delete this exception statement from your
 * version. If you delete this exception statement from all source files
 * in the program, then also delete it here.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 **/

// This file is autogenerated by "../Resources/GenerateTransferSyntaxes.py"

namespace Orthanc
{
  bool GetDcmtkTransferSyntax(E_TransferSyntax& target,
                              DicomTransferSyntax syntax)
  {
    switch (syntax)
    {
      case DicomTransferSyntax_LittleEndianImplicit:
        target = EXS_LittleEndianImplicit;
        return true;

      case DicomTransferSyntax_LittleEndianExplicit:
        target = EXS_LittleEndianExplicit;
        return true;

      case DicomTransferSyntax_DeflatedLittleEndianExplicit:
        target = EXS_DeflatedLittleEndianExplicit;
        return true;

      case DicomTransferSyntax_BigEndianExplicit:
        target = EXS_BigEndianExplicit;
        return true;

      case DicomTransferSyntax_JPEGProcess1:
        target = EXS_JPEGProcess1;
        return true;

      case DicomTransferSyntax_JPEGProcess2_4:
        target = EXS_JPEGProcess2_4;
        return true;

      case DicomTransferSyntax_JPEGProcess3_5:
        target = EXS_JPEGProcess3_5;
        return true;

      case DicomTransferSyntax_JPEGProcess6_8:
        target = EXS_JPEGProcess6_8;
        return true;

      case DicomTransferSyntax_JPEGProcess7_9:
        target = EXS_JPEGProcess7_9;
        return true;

      case DicomTransferSyntax_JPEGProcess10_12:
        target = EXS_JPEGProcess10_12;
        return true;

      case DicomTransferSyntax_JPEGProcess11_13:
        target = EXS_JPEGProcess11_13;
        return true;

      case DicomTransferSyntax_JPEGProcess14:
        target = EXS_JPEGProcess14;
        return true;

      case DicomTransferSyntax_JPEGProcess15:
        target = EXS_JPEGProcess15;
        return true;

      case DicomTransferSyntax_JPEGProcess16_18:
        target = EXS_JPEGProcess16_18;
        return true;

      case DicomTransferSyntax_JPEGProcess17_19:
        target = EXS_JPEGProcess17_19;
        return true;

      case DicomTransferSyntax_JPEGProcess20_22:
        target = EXS_JPEGProcess20_22;
        return true;

      case DicomTransferSyntax_JPEGProcess21_23:
        target = EXS_JPEGProcess21_23;
        return true;

      case DicomTransferSyntax_JPEGProcess24_26:
        target = EXS_JPEGProcess24_26;
        return true;

      case DicomTransferSyntax_JPEGProcess25_27:
        target = EXS_JPEGProcess25_27;
        return true;

      case DicomTransferSyntax_JPEGProcess28:
        target = EXS_JPEGProcess28;
        return true;

      case DicomTransferSyntax_JPEGProcess29:
        target = EXS_JPEGProcess29;
        return true;

      case DicomTransferSyntax_JPEGProcess14SV1:
        target = EXS_JPEGProcess14SV1;
        return true;

      case DicomTransferSyntax_JPEGLSLossless:
        target = EXS_JPEGLSLossless;
        return true;

      case DicomTransferSyntax_JPEGLSLossy:
        target = EXS_JPEGLSLossy;
        return true;

      case DicomTransferSyntax_JPEG2000LosslessOnly:
        target = EXS_JPEG2000LosslessOnly;
        return true;

      case DicomTransferSyntax_JPEG2000:
        target = EXS_JPEG2000;
        return true;

      case DicomTransferSyntax_JPEG2000MulticomponentLosslessOnly:
        target = EXS_JPEG2000MulticomponentLosslessOnly;
        return true;

      case DicomTransferSyntax_JPEG2000Multicomponent:
        target = EXS_JPEG2000Multicomponent;
        return true;

      case DicomTransferSyntax_JPIPReferenced:
        target = EXS_JPIPReferenced;
        return true;

      case DicomTransferSyntax_JPIPReferencedDeflate:
        target = EXS_JPIPReferencedDeflate;
        return true;

      case DicomTransferSyntax_MPEG2MainProfileAtMainLevel:
        target = EXS_MPEG2MainProfileAtMainLevel;
        return true;

      case DicomTransferSyntax_MPEG2MainProfileAtHighLevel:
        target = EXS_MPEG2MainProfileAtHighLevel;
        return true;

      case DicomTransferSyntax_MPEG4HighProfileLevel4_1:
        target = EXS_MPEG4HighProfileLevel4_1;
        return true;

      case DicomTransferSyntax_MPEG4BDcompatibleHighProfileLevel4_1:
        target = EXS_MPEG4BDcompatibleHighProfileLevel4_1;
        return true;

      case DicomTransferSyntax_MPEG4HighProfileLevel4_2_For2DVideo:
        target = EXS_MPEG4HighProfileLevel4_2_For2DVideo;
        return true;

      case DicomTransferSyntax_MPEG4HighProfileLevel4_2_For3DVideo:
        target = EXS_MPEG4HighProfileLevel4_2_For3DVideo;
        return true;

      case DicomTransferSyntax_MPEG4StereoHighProfileLevel4_2:
        target = EXS_MPEG4StereoHighProfileLevel4_2;
        return true;

#if DCMTK_VERSION_NUMBER >= 362
      case DicomTransferSyntax_HEVCMainProfileLevel5_1:
        target = EXS_HEVCMainProfileLevel5_1;
        return true;
#endif

#if DCMTK_VERSION_NUMBER >= 362
      case DicomTransferSyntax_HEVCMain10ProfileLevel5_1:
        target = EXS_HEVCMain10ProfileLevel5_1;
        return true;
#endif

      case DicomTransferSyntax_RLELossless:
        target = EXS_RLELossless;
        return true;

      default:
        return false;
    }
  }
}
